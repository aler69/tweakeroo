# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "pre-rewrite/fabric/1.19.x" ]
  pull_request:
    branches: [ "pre-rewrite/fabric/1.19.x" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        path: |
          ~/.gradle/caches
          ~/.gradle/loom-cache
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build artifacts
      run: ./gradlew build
    - name: Extract current branch name
      shell: bash
      # bash pattern expansion to grab branch name without slashes
      run: ref="${GITHUB_REF#refs/heads/}" && echo "::set-output name=branch::${ref////-}"
      id: ref
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: tweak-artifacts-${{ steps.ref.outputs.branch }}
        # Filter built files to disregard -sources and -dev, and leave only the minecraft-compatible jars.
        # This also filters out unstable versions, and only builds for tagged versions.
        path: build/libs/*[0-9].jar
